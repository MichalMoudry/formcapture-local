@layout IndexLayout
@inject IJSRuntime IJSRuntime
@inject NavigationManager NavigationManager
@page "/login"

<h3><span class="oi oi-account-login"></span> Login</h3>

<div class="form-card">
    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" @bind-value="loginModel.Email" placeholder="Enter your email..." class="form-control" id="email" name="email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" @bind-value="loginModel.Password" placeholder="Enter your password..." class="form-control" id="password" name="password" />
    </div>

    <button @onclick="Submit" class="btn btn-outline-primary" disabled="@isSubmitButtonDisabled">Submit</button>

    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary @LoadingIndicatorCssClass" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>

<div class="alert alert-danger form-alert d-none mt-4 @FormAlertCssClass" role="alert">
    @errorMessage
</div>

@code
{
    private LoginModel loginModel = new LoginModel();

    private bool isLoadingIndicatorHidden = true;

    private string LoadingIndicatorCssClass => isLoadingIndicatorHidden ? "d-none" : null;

    private string FormAlertCssClass => isFormAlertDisplayed ? "d-block" : "d-none";

    private bool isSubmitButtonDisabled = false;

    private bool isFormAlertDisplayed = false;

    private string errorMessage;

    private async Task Submit()
    {
        isSubmitButtonDisabled = true;
        if (!string.IsNullOrEmpty(loginModel.Email) && !string.IsNullOrEmpty(loginModel.Password))
        {
            var user = await IJSRuntime.InvokeAsync<User>("getItem", loginModel.Email, "Users");
            if (user != null)
            {
                isFormAlertDisplayed = false;
                string userHash = await IJSRuntime.InvokeAsync<string>("hashString", loginModel.Password, user.PasswordSalt);
                if (userHash.Equals(user.PasswordHash))
                {
                    user.LastLogin = DateTime.Now;
                    NavigationManager.NavigateTo("/formcapture/home");
                }
                else
                {
                    errorMessage = "Wrong password.";
                    isFormAlertDisplayed = true;
                }
            }
            else
            {
                errorMessage = "No user with this email exists.";
                isFormAlertDisplayed = true;
            }
        }
        else
        {
            errorMessage = "Login form wasn't properly completed.";
            isFormAlertDisplayed = true;
        }
        isSubmitButtonDisabled = false;
    }
}