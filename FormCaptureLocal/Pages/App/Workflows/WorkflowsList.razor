@layout AppLayout
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime
@page "/formcapture/workflows"

<h3><span class="oi oi-project mr-1"></span> Workflows</h3>

<hr />

<div class="d-flex">
    <button type="button" class="btn btn-outline-success" @onclick="@(e => Navigate("/formcapture/workflows/add"))" title="Add a new workflow">
        <span class="oi oi-plus mr-2"></span> Add a new workflow
    </button>
    <div class="dropdown">
        <button type="button" class="btn btn-outline-primary ml-2 dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="sortButton" title="Sort the list of workflows">
            <span class="oi oi-sort-ascending mr-1"></span> Sort list
        </button>
        <div class="dropdown-menu" aria-labelledby="sortButton">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
        </div>
    </div>
</div>

@if (workflows == null)
{
    <p class="mt-3">
        <span class="mt-2">Loading...</span>
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </p>
}
else
{
    <div class="table-responsive mt-3">
        <table class="table table-hover">
            <thead>
                <tr>
                    <td>Name</td>
                    <td>Added</td>
                    <td>Updated</td>
                    <td>Edit</td>
                    <td>Delete</td>
                </tr>
            </thead>
            <tbody>
                @foreach (Workflow workflow in workflows)
                {
                    <tr class="pointer">
                        <td @onclick="@(e => Navigate($"/formcapture/workflows/{workflow.ID}/edit"))">@workflow.Name</td>
                        <td @onclick="@(e => Navigate($"/formcapture/workflows/{workflow.ID}/edit"))">@workflow.Added</td>
                        <td @onclick="@(e => Navigate($"/formcapture/workflows/{workflow.ID}/edit"))">@workflow.Updated</td>
                        <td @onclick="@(e => Navigate($"/formcapture/workflows/{workflow.ID}/edit"))"><span class="oi oi-pencil"></span></td>
                        <td><span class="oi oi-trash"></span></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code
{
    private List<Workflow> workflows;

    private void Navigate(string uri)
    {
        NavigationManager.NavigateTo(uri);
    }

    protected override async Task OnInitializedAsync()
    {
        workflows = await IJSRuntime.InvokeAsync<List<Workflow>>("getAllItems", "Workflows");
        if (workflows != null)
        {
            workflows = workflows.Where(i => i.UserID.Equals(UserHelper.UserID)).ToList();
        }
    }
}