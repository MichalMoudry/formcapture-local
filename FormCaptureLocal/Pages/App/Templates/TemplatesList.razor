@layout MainLayout
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime
@page "/formcapture/templates"

<h3><span class="oi oi-image mr-1"></span> Templates</h3>

<hr />

<div class="d-flex">
    <button type="button" class="btn btn-outline-success" @onclick="NavigateToTemplateAddPage"><span class="oi oi-plus"></span> Add a new template</button>
    <div class="dropdown">
        <button type="button" class="btn btn-outline-primary ml-2 dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="sortButton">
            <span class="oi oi-sort-ascending"></span> Sort list
        </button>
        <div class="dropdown-menu" aria-labelledby="sortButton">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
        </div>
    </div>
</div>

<div class="table-responsive mt-3">
    <table class="table table-hover">
        <thead>
            <tr>
                <td><b>Name</b></td>
                <td><b>Added</b></td>
                <td><b>Last updated</b></td>
                <td><b>Delete</b></td>
            </tr>
        </thead>

        <tbody>
            @if (templates != null)
            {
                @foreach (var template in templates)
                {
                    <tr class="pointer">
                        <td @onclick="@(e => Navigate($"/formcapture/templates/{template.ID}"))">@template.Name</td>
                        <td @onclick="@(e => Navigate($"/formcapture/templates/{template.ID}"))">@template.Added</td>
                        <td @onclick="@(e => Navigate($"/formcapture/templates/{template.ID}"))">@template.Updated</td>
                        <td><span class="oi oi-trash"></span></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    @if (templates == null)
    {
        <p class="ml-3">Loading...</p>
    }
    else
    {
        @if (templates.Count <= 0)
        {
            <p>There are no templates.</p>
        }
    }
</div>

@code
{
    private List<Template> templates;

    private void NavigateToTemplateAddPage()
    {
        NavigationManager.NavigateTo("/formcapture/templates/add");
    }

    private void Navigate(string page)
    {
        NavigationManager.NavigateTo(page);
    }

    protected override async Task OnInitializedAsync()
    {
        templates = await IJSRuntime.InvokeAsync<List<Template>>("getAllItems", "Templates");
        if (templates != null)
        {
            templates = templates.Where(i => i.UserID.Equals(UserHelper.UserID)).ToList();
        }
    }
}