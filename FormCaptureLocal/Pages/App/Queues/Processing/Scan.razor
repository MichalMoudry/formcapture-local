@layout AppLayout
@inject NavigationManager NavigationManager
@inject IStringLocalizer<App> Localizer
@inject DataAccess DataAccess
@page "/formcapture/queues/{queueID}/scan"

<h3><span class="fluentUiGlyph tableFluentGlyph h3FluentGlyph mr-2">&#xEA01;</span>  @Localizer["ScanNoun"]</h3>

<hr />

@code
{
    /// <summary>
    /// ID of a queue that is going to be processed.
    /// </summary>
    [Parameter]
    public string QueueID { get; set; }

    /// <summary>
    /// Queue that is being processed.
    /// </summary>
    private Queue queue;

    /// <summary>
    /// List of processed files (see: <see cref="ProcessedFile"/> class).
    /// </summary>
    private List<ProcessedFile> processedFiles;

    /// <summary>
    /// Override of OnInitializedAsync() component method.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            queue = await DataAccess.GetItem<Queue>(QueueID, ObjectStores.Queues.ToString());
        }
        catch (Exception)
        {
            NavigationManager.NavigateTo("/NotFound");
            return;
        }
        if (queue != null)
        {
            Console.WriteLine(queue.Name);
        }
    }
}